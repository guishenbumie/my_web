// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pbidl/gate.proto

// Protobuf Java Version: 3.25.4
package msg.gate;

/**
 * <pre>
 * 服务器发送公钥(ECDHE)。客户端收到后开始加密
 * </pre>
 *
 * Protobuf type {@code gate.SKeyExchange}
 */
public final class SKeyExchange extends
    com.google.protobuf.GeneratedMessageV3 implements msg.IMsgId,
    // @@protoc_insertion_point(message_implements:gate.SKeyExchange)
    SKeyExchangeOrBuilder {
private static final long serialVersionUID = 0L;
public static final int TYPE_ID = 1102;
    @Override
    public int typeId() { return TYPE_ID; }

  // Use SKeyExchange.newBuilder() to construct.
  private SKeyExchange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SKeyExchange() {
    serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
    serverSignature_ = com.google.protobuf.ByteString.EMPTY;
    readNonce_ = com.google.protobuf.ByteString.EMPTY;
    writeNonce_ = com.google.protobuf.ByteString.EMPTY;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new SKeyExchange();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return gate.internal_static_gate_SKeyExchange_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return gate.internal_static_gate_SKeyExchange_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            SKeyExchange.class, Builder.class);
  }

  public static final int SERVERPUBLICKEY_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * 服务器公钥
   * </pre>
   *
   * <code>bytes serverPublicKey = 1;</code>
   * @return The serverPublicKey.
   */
  @Override
  public com.google.protobuf.ByteString getServerPublicKey() {
    return serverPublicKey_;
  }

  public static final int SERVERSIGNATURE_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString serverSignature_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * 服务器公钥签名
   * </pre>
   *
   * <code>bytes serverSignature = 2;</code>
   * @return The serverSignature.
   */
  @Override
  public com.google.protobuf.ByteString getServerSignature() {
    return serverSignature_;
  }

  public static final int READNONCE_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString readNonce_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * 读密钥随机数
   * </pre>
   *
   * <code>bytes readNonce = 3;</code>
   * @return The readNonce.
   */
  @Override
  public com.google.protobuf.ByteString getReadNonce() {
    return readNonce_;
  }

  public static final int WRITENONCE_FIELD_NUMBER = 4;
  private com.google.protobuf.ByteString writeNonce_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * 写密钥随机数
   * </pre>
   *
   * <code>bytes writeNonce = 4;</code>
   * @return The writeNonce.
   */
  @Override
  public com.google.protobuf.ByteString getWriteNonce() {
    return writeNonce_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!serverPublicKey_.isEmpty()) {
      output.writeBytes(1, serverPublicKey_);
    }
    if (!serverSignature_.isEmpty()) {
      output.writeBytes(2, serverSignature_);
    }
    if (!readNonce_.isEmpty()) {
      output.writeBytes(3, readNonce_);
    }
    if (!writeNonce_.isEmpty()) {
      output.writeBytes(4, writeNonce_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!serverPublicKey_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, serverPublicKey_);
    }
    if (!serverSignature_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, serverSignature_);
    }
    if (!readNonce_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, readNonce_);
    }
    if (!writeNonce_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(4, writeNonce_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof SKeyExchange)) {
      return super.equals(obj);
    }
    SKeyExchange other = (SKeyExchange) obj;

    if (!getServerPublicKey()
        .equals(other.getServerPublicKey())) return false;
    if (!getServerSignature()
        .equals(other.getServerSignature())) return false;
    if (!getReadNonce()
        .equals(other.getReadNonce())) return false;
    if (!getWriteNonce()
        .equals(other.getWriteNonce())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SERVERPUBLICKEY_FIELD_NUMBER;
    hash = (53 * hash) + getServerPublicKey().hashCode();
    hash = (37 * hash) + SERVERSIGNATURE_FIELD_NUMBER;
    hash = (53 * hash) + getServerSignature().hashCode();
    hash = (37 * hash) + READNONCE_FIELD_NUMBER;
    hash = (53 * hash) + getReadNonce().hashCode();
    hash = (37 * hash) + WRITENONCE_FIELD_NUMBER;
    hash = (53 * hash) + getWriteNonce().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static SKeyExchange parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SKeyExchange parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SKeyExchange parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SKeyExchange parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SKeyExchange parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SKeyExchange parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SKeyExchange parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SKeyExchange parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static SKeyExchange parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static SKeyExchange parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static SKeyExchange parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SKeyExchange parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(SKeyExchange prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 服务器发送公钥(ECDHE)。客户端收到后开始加密
   * </pre>
   *
   * Protobuf type {@code gate.SKeyExchange}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:gate.SKeyExchange)
      SKeyExchangeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gate.internal_static_gate_SKeyExchange_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gate.internal_static_gate_SKeyExchange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SKeyExchange.class, Builder.class);
    }

    // Construct using msg.gate.SKeyExchange.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      serverSignature_ = com.google.protobuf.ByteString.EMPTY;
      readNonce_ = com.google.protobuf.ByteString.EMPTY;
      writeNonce_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return gate.internal_static_gate_SKeyExchange_descriptor;
    }

    @Override
    public SKeyExchange getDefaultInstanceForType() {
      return SKeyExchange.getDefaultInstance();
    }

    @Override
    public SKeyExchange build() {
      SKeyExchange result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public SKeyExchange buildPartial() {
      SKeyExchange result = new SKeyExchange(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(SKeyExchange result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.serverPublicKey_ = serverPublicKey_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.serverSignature_ = serverSignature_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.readNonce_ = readNonce_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.writeNonce_ = writeNonce_;
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof SKeyExchange) {
        return mergeFrom((SKeyExchange)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(SKeyExchange other) {
      if (other == SKeyExchange.getDefaultInstance()) return this;
      if (other.getServerPublicKey() != com.google.protobuf.ByteString.EMPTY) {
        setServerPublicKey(other.getServerPublicKey());
      }
      if (other.getServerSignature() != com.google.protobuf.ByteString.EMPTY) {
        setServerSignature(other.getServerSignature());
      }
      if (other.getReadNonce() != com.google.protobuf.ByteString.EMPTY) {
        setReadNonce(other.getReadNonce());
      }
      if (other.getWriteNonce() != com.google.protobuf.ByteString.EMPTY) {
        setWriteNonce(other.getWriteNonce());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              serverPublicKey_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              serverSignature_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              readNonce_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              writeNonce_ = input.readBytes();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * 服务器公钥
     * </pre>
     *
     * <code>bytes serverPublicKey = 1;</code>
     * @return The serverPublicKey.
     */
    @Override
    public com.google.protobuf.ByteString getServerPublicKey() {
      return serverPublicKey_;
    }
    /**
     * <pre>
     * 服务器公钥
     * </pre>
     *
     * <code>bytes serverPublicKey = 1;</code>
     * @param value The serverPublicKey to set.
     * @return This builder for chaining.
     */
    public Builder setServerPublicKey(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      serverPublicKey_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务器公钥
     * </pre>
     *
     * <code>bytes serverPublicKey = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerPublicKey() {
      bitField0_ = (bitField0_ & ~0x00000001);
      serverPublicKey_ = getDefaultInstance().getServerPublicKey();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString serverSignature_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * 服务器公钥签名
     * </pre>
     *
     * <code>bytes serverSignature = 2;</code>
     * @return The serverSignature.
     */
    @Override
    public com.google.protobuf.ByteString getServerSignature() {
      return serverSignature_;
    }
    /**
     * <pre>
     * 服务器公钥签名
     * </pre>
     *
     * <code>bytes serverSignature = 2;</code>
     * @param value The serverSignature to set.
     * @return This builder for chaining.
     */
    public Builder setServerSignature(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      serverSignature_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务器公钥签名
     * </pre>
     *
     * <code>bytes serverSignature = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerSignature() {
      bitField0_ = (bitField0_ & ~0x00000002);
      serverSignature_ = getDefaultInstance().getServerSignature();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString readNonce_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * 读密钥随机数
     * </pre>
     *
     * <code>bytes readNonce = 3;</code>
     * @return The readNonce.
     */
    @Override
    public com.google.protobuf.ByteString getReadNonce() {
      return readNonce_;
    }
    /**
     * <pre>
     * 读密钥随机数
     * </pre>
     *
     * <code>bytes readNonce = 3;</code>
     * @param value The readNonce to set.
     * @return This builder for chaining.
     */
    public Builder setReadNonce(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      readNonce_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 读密钥随机数
     * </pre>
     *
     * <code>bytes readNonce = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearReadNonce() {
      bitField0_ = (bitField0_ & ~0x00000004);
      readNonce_ = getDefaultInstance().getReadNonce();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString writeNonce_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * 写密钥随机数
     * </pre>
     *
     * <code>bytes writeNonce = 4;</code>
     * @return The writeNonce.
     */
    @Override
    public com.google.protobuf.ByteString getWriteNonce() {
      return writeNonce_;
    }
    /**
     * <pre>
     * 写密钥随机数
     * </pre>
     *
     * <code>bytes writeNonce = 4;</code>
     * @param value The writeNonce to set.
     * @return This builder for chaining.
     */
    public Builder setWriteNonce(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      writeNonce_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 写密钥随机数
     * </pre>
     *
     * <code>bytes writeNonce = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearWriteNonce() {
      bitField0_ = (bitField0_ & ~0x00000008);
      writeNonce_ = getDefaultInstance().getWriteNonce();
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:gate.SKeyExchange)
  }

  // @@protoc_insertion_point(class_scope:gate.SKeyExchange)
  private static final SKeyExchange DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SKeyExchange();
  }

  public static SKeyExchange getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SKeyExchange>
      PARSER = new com.google.protobuf.AbstractParser<SKeyExchange>() {
    @Override
    public SKeyExchange parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SKeyExchange> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<SKeyExchange> getParserForType() {
    return PARSER;
  }

  @Override
  public SKeyExchange getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

